#include <stdio.h>

// Function to reverse elements in the array from start to end index
void reverse(int* nums, int start, int end) {
    while (start < end) {
        int temp = nums[start];
        nums[start] = nums[end];
        nums[end] = temp;
        start++;
        end--;
    }
}

// Function to rotate the array to the right by k steps
void rotate(int* nums, int numsSize, int k) {
    k = k % numsSize; // Reduce k to avoid unnecessary rotations
    
    if (k == 0) return; // No rotation needed
    
    // Step 1: Reverse the entire array
    reverse(nums, 0, numsSize - 1);
    
    // Step 2: Reverse the first k elements
    reverse(nums, 0, k - 1);
    
    // Step 3: Reverse the remaining elements
    reverse(nums, k, numsSize - 1);
}

int main() {
    int nums[] = {1, 2, 3, 4, 5, 6, 7}; // Example array
    int numsSize = sizeof(nums) / sizeof(nums[0]);
    int k = 3; // Number of steps to rotate

    printf("Original array: ");
    for (int i = 0; i < numsSize; i++) {
        printf("%d ", nums[i]);
    }
    printf("\n");

    rotate(nums, numsSize, k);

    printf("Array after rotating by %d steps to the right: ", k);
    for (int i = 0; i < numsSize; i++) {
        printf("%d ", nums[i]);
    }
    printf("\n");

    return 0;
}
